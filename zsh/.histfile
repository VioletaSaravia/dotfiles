ls
ls /A
ls -A
nvim .config/sway/config
nvim .config/sway/config
waybar
sudo pacman -Ss jetbrains
sudo pacman -S ttf-jetbrains-mono-nerd
wofi
ls
dmenu
dmenu_run
sudo reboot
asd
man foot
pacman -Ss man
pacman -Ss man docs
pacman -S man
sudo pacman -S man
man foot
man 5 foot
man foot
nvim .config/sway/config
fc-list
fc-list | grep jetbrains
fc-list | grep -e jetbrains
fc-list | sort | grep -e jetbrains
fc-list | sort | grep -e JetBrains
fc-list | sort | grep -e JetBrainsMonoNerd
fc-list | sort | grep -e JetBrainsMonoNerd
fc-list | sort | grep -e JetBrainsMonoNerdFontMono
fc-list | sort | grep -e JetBrainsMonoNerdFontMono
swaybg
wmenu
dmenu_path
dmenu
dmenu_run
mv /etc/xdg/foot/foot.ini .config/foot
mkdir .config/foot
mv /etc/xdg/foot/foot.ini .config/foot/
cp /etc/xdg/foot/foot.ini .config/foot/
nvim .config/foot/foot.ini
amixer
aplay -l
pipewire
pipestatus
pipewire-pulse
nvim .config/sway/config
neovim .zshrc
nvim .zshrc
source .zshrc
vi .zshrc
ls -A
ls -A --color-auto
ls -A --color=auto
nvim .zshrc
cat .bash_history
cat .bash_history > setup.sh
mkdir .config/waybar
ls -R | grep style
ls -R
ls
cd Downloads
ls
unzip
yay -Ss zip
yay -S unzip
unzip waybar-main.zip
cd waybar-main
cd themes
cd
cp Downloads/waybar-main/themes/macchiato.css .config/waybar
mv .config/waybar/macchiato.css .config/waybar/style.css
killall waybar
rm .config/waybar/style.css
killall waybar
pacman -Ss fantasque
pacman -S ttf-fantasque-nerd ttf-fantasque-sans-mono
pacman -R ttf-fantasque-nerd ttf-fantasque-sans-mono
pacman -S ttf-fantasque-nerd ttf-fantasque-sans-mono
pacman -R ttf-fantasque-nerd ttf-fantasque-sans-mono
nvim .config/waybar/config
wshutdown
ls
mv Downloads/waybar-main/themes/ .config/waybar
cd .config/waybar
ls
nvim style.css
killall waybar
cd
mv Downloads/config .config/waybar
killall waybar
nvim .config/waybar/config
nvim .config/waybar/style.css
cd .config/waybar
ls
rm -rf style.css themes
nvim config
cat .histfile
cat .histfile | grep -v fc-list | grep -v ls
cat .histfile | grep -v fc-list | grep -v ls >> setup.sh
vi setup.sh
nano
swaybar
pacman -R nano swaybar
pacman -R nano
nvim .zshrc
dmenu_run
pacman -Ss wl
pacman -Ss wl-copy
pacman -Ss clip
pacman -Ss clip wayland
pacman -S wl-clipboard
pacman -S --needed git base-devel && git clone https://aur.archlinux.org/yay.git && cd yay && makepkg -si
yay
cd
yay -Ss waybar
yay -Ss waybar catpuccin
yay -Ss catpuccin
nvim .config/sway/config
nvim .config/sway/config
man nvim
git
git config --global user.name "Violeta Saravia"
git config --global user.email "saraviavioleta@gmail.com"
vim .config/sway/config
vim .config/sway/config
ls
cd .config/sway
ls
vim config
cd ..
cd waybar
ls
vim config
pacman -S lazygit
mkdir .config/nvim
nvim .config/nvim/init.vim
nvim .config/nvim/init.vim
vi .config/nvim/init.vim
mv .config/nvim/init.vim .config/nvim/init.lua
nvim
nvim
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
nvim .config/nvim/init.lua
pacman -Ss emoji
yay -Ss noto emoji
pacman -S noto-fonts-emoji
shutdown
sudo reboot
nvim .config/nvim/init.lua
pacman -Ss code
pacman -Ss visual studio
yay -Ss visual studio
yay -S visual-studio-code-bin
yay -S visual-studio-code-bin
yay -R visual-studio-code-bin
iwctl
wofi -i
wofi -i --show drun
wofi -i --show drun
yay -Ss autologin
pacman -Ss wofi
pacman -S wofi
wofi
wofi --show
man wofi
man 7 wofi
wofi run
wofi --show run
nvim
wofi --show run
yay -S dmenu-emoji
dmenu-emoji
dmenu-emoji | dmenu -i -l 10 | echo -
dmenu-emoji | dmenu | vim -
dmenu-emoji | dmenu | awk '{print $1}' | tr -d '\n' | wl-copy
dmenu-emoji | dmenu_run | awk '{print $1}' | tr -d '\n' | wl-copy
dmenu-emoji | dmenu | awk '{print $1}' | tr -d '\n' | echo -
dmenu-emoji | dmenu | awk '{print $1}' | tr -d '\n' | echo
dmenu-emoji | dmenu | awk '{print $1}' | tr -d '\n' | printf
dmenu-emoji | dmenu | awk '{print $1}' | tr -d '\n' | printf -
dmenu-emoji | dmenu | awk '{print $1}' | tr -d '\n' | printf -
dmenu-emoji | dmenu | awk '{print $1}' | tr -d '\n' | wl-copy | wl-paste
dmenu-emoji | dmenu | awk '{print $1}' | tr -d '\n' | wl-copy | wl-paste
dmenu-emoji | dmenu | awk '{print $1}' | tr -d '\n' | wl-copy | wl-paste
dmenu-emoji | dmenu | awk '{print $1}' | tr -d '\n' | wl-copy && wl-paste
echo 'dmenu-emoji | dmenu | awk '{print $1}' | tr -d '\n' | wl-copy && wl-paste' >> setup.sh
pacman -S tlp
sudo systemctl enable tlp.service
htop
htop
ls /etc/xdg/waybar
mv Downloads/mediaplayer.py Downloads/power_menu.xml .config/waybar
pacman -S otf-font-awesome
wmenu
pacman -Ss wmenu
pacman -S wmenu
killall dmenu
pacman -R wmenu
pacman -S wmenu
ls -R / | grep config
ls -R / | grep config | grep dmenu
sudo ls -R / | grep config | grep dmenu
sudo ls -R / | grep dmenu
pacman -Syu
ðƒ¿ƒ§¦ðƒ¿ƒ§·
rm -rf .config/waybar
mv /etc/xdg/waybar/ .config/
cp /etc/xdg/waybar/ .config
cp -r /etc/xdg/waybar/ .config
cd .config/waybar
ls
nvim config.jsonc
nvim style.css
nvim config.jsonc
nvim style.css
nvim config.jsonc
nvim style.css
nvim config.jsonc
cd ..
cd sway
vim config
pacman -R wofi
pacman -R bash
nvim .histfile
mkdir .config/zsh
ls
mv .zshrc .zcompdump .histfile .config/zsh
cd .config/zsh
ls
ls | ln -s - ~/
ls
cd
ls
ln -s .config/zsh/.zshrc .zshrc
ls
ln -s .config/zsh/.zcompdump .zcompdump
ln -s .config/zsh/.histfile .histfile
ls
git-credential-manager
git-credential-manager github
git-credential-manager github login
export GCM_CREDENTIAL_STORE=cache
echo $GCM_CREDENTIAL_STORE
echo 'export GCM_CREDENTIAL_STORE=cache' >> .config/scripts/setup.sh
git-credential-manager github login
git-credential-manager github list
ls
mkdir Dev
cd Dev
git clone https://github.com/VioletaSaravia/c-codegen.git
cd c-codegen
cd
nvim .config/nvim/init.lua
nvim .zshrc
vi .zshrc
nvim-edit
yay -Ss wine | vim
yay -S wine-valve
yay -S wine-stable
sudo nvim /etc/pacman.conf
pacman -Syu
pacman -S wine
wine
yay -Ss bottle
yay -S bottles
yay -Ss redistributable
pacman -S winetricks
yay -Ss wine mono
pacman -S wine-mono
winetricks
swaybg Downloads/undefined\ -\ Imgur.jpg
swaybg -i Downloads/undefined\ -\ Imgur.jpg
mv Downloads/undefined\ -\ Imgur.jpg ibm.jpg
ibm.jpg
ls
nvim .config/sway/config
cd .config
git
git status
git add .
nvim foot/foot.ini 
ls
rm -
mkdir .config/git
mv .gitconfig .config/git
ln -s .config/git/.gitconfig .gitconfig
rm .zshrc.zni .xsession-errors.old
ls
ls | grep bash
ls | grep bash | xargs rm
ls
ls -R yay
rm -rf yay
sudo rm -rf yay
ls
yay -Syu
mkdir .config/scripts
mv setup.sh .config/scripts
ls -R .local
ls
go env -w GOPATH
mkdir .local/go
go env -w GOPATH=~/.local/go
go env -w GOPATH=.local/go
go env -w GOPATH=\~/.local/go
go env -w GOPATH=/home/violeta.local/go
go env -w GOPATH=/home/violeta/.local/go
ls
rm go
rm -r go
rm -rf go
sudo rm -rf go
ls
go install github.com/air-verse/air@latest
air
go air
go run air
ls
cd .config/go
ls
go run github.com/air-verse/air@latest
cd
go run github.com/air-verse/air@latest
ls
rm -rf tmp
ls / -R | grep air
sudo ls / -R | grep air
sudo ls / -R | grep -w air
timedatectl
ls .local/go
rm -rf .config/go
go
echo $GOPATH
gopath
go gopath
go help gopath
go env -w GOPATH=/home/violeta/.local/go
ls
ls go
ls -R go
rm -rf go
sudo rm -rf go
go env -w GOPATH=/home/violeta/.local/go
ls
ls -R .config/go
nvim .config/go/env
ls .local
nvim .config/waybar/config.jsonc
cd .config
git init
yay -Ss git-credential
pacman -Ss git-credential
yay -S git-credential-manager
yay -S git-credential-manager-bin
cd
pacman -S pass
pacman -S ydotool
pass
usermod -aG input $USER
sudo usermod -aG input $USER
yay -Ss itch
yay -Ss itch.io
yay -S itch-bin
cd Dev/c-codegen
ls
pacman -Ss wine
pacman -S wine
yay -Ss wine
ls
gcc main.c
gcc main.c | vim
gcc main.c | vim -
gcc main.c | vim -
gcc main.c 2| vim -
gcc main.c 2> vim
ls
vim vim
gcc main.c
gcc main.c
gcc main.c
nvim-conf
nvim-conf
nvim Dev/c-codegen/
pactl
pacman -S bluez bluez-utils
lsmod
lsmod | grep b
lsmod | grep bt
modinfo btusb
lsmod | grep bt
sudo systemctl enable bluetooth.service
sudo systemctl start bluetooth.service
bluetoothctl
bluetoothctl -- scan off
bluetoothctl
bluetoothctl -- scan on
bluetoothctl -- info
bluetoothctl -- info --monitor
bluetoothctl -- scan on
bluetoothctl -- scan off
bluetoothctl -- devices
bluetoothctl -- devices | dmenu
bluetoothctl -- devices | dmenu
echo asd asd
echo asd asd | awk $2
echo asd asd | awk '$2'
echo asd asd | awk '{print $2}'
bluetoothctl -- devices | dmenu | awk '{print $2}'
bluetoothctl -- devices | dmenu | awk '{print $2}' | bluetoothctl connect -
bluetoothctl -- devices | dmenu | awk '{print $2}' | xargs bluetoothctl connect
echo 'bluetoothctl -- devices | dmenu | awk '{print $2}' | xargs bluetoothctl connect' >> .config/scripts/setup.sh
nvim .config/scripts/setup.sh
rm -rf .config/itch/
cd .config
git add .
git status
git commit -m "first commit"
git remote add origin https://github.com/VioletaSaravia/dotfiles.git
git branch -M main
git push -u origin main
gcm
git-credential-manager
git-credential-manager github list
export GCM_CREDENTIAL_STORE=cache
git-credential-manager github list
git-credential-manager github 
git-credential-manager github login
git push -u origin main
git-credential-manager github list
git push -u origin main
nvim git/.gitconfig
git push -u origin main
git config --global credential.helper store
nvim git/.gitconfig
git push -u origin main
git config --global alias.credential-manager "git-credential-manager"
git push -u origin main
nvim git/.gitconfig
git-credential-manager configure
nvim git/.gitconfig
git-credential-manager github list
git push -u origin main
yay -R itch-bin
yay -Ss fly
yay -Ss pipewire
nvim .config/waybar/config.jsonc
cd
cd Downloads
./start
chmod +x start
./start
./start
./start
objdump
objdump start
nc
yay -Ss nc
yay -Ss gef
pacman -S gef
pacman -S python-capstone python-keystone python-unicorn
gdb -q /bin/ls
gef
ls
source /usr/share/gef/gef.py
python
python
./Downloads/start
ls
pip
pacman -Ss rpyc
pacman -Ss pygments
pacman -S python-rpyc python-pygments python-ropper
pacman -Ss pip
pacman -S python-pip
pip
wget -q -O- https://github.com/hugsy/gef/raw/main/scripts/gef-extras.sh | sh
wget -q -O- https://github.com/hugsy/gef/raw/main/scripts/gef-extras.sh | sh --break-system-packages
ls
cd gef-scripts
ls
wget -O /tmp/requirements.txt https://raw.githubusercontent.com/hugsy/gef-extras/main/requirements.txt
python -m pip install --user --upgrade -r /tmp/requirements.txt
python -m pip install --user --upgrade -r /tmp/requirements.txt --break-system-packages
cd .config/scripts
git clone https://github.com/hugsy/gef-extras
ls
cd gef-extras
ls
zsh -c "$(curl -fsSL https://gef.blah.cat/sh)"
cd ..
zsh -c "$(curl -fsSL https://gef.blah.cat/sh)"
ls
cd gef-extras
ls
pip install -r requirements.txt
pip install -r requirements.txt --break-system-packages
ls
ls -R
ls -R | syscall
ls -R | grep syscall
gef
man gef
\

yay -Ss imhex
yay -Ss rad
yay -Ss imhex
yay -S imhex
killall dmenu
killall dmenu
cd .config/scripts/gef-extras/scripts
ls
nvim
grep -Rn .
grep -Rn . -e 'colorify'
python windbg.py
pacman -S python-gdb
python got_audit.py
python visualize_heap.py
grep -Rn . -e 'skel'
nvim skel.py
ls
mkdir Pictures
mv ibm.jpg Pictures
nvim .config/sway/config
ls
python
python /usr/share/gef/gef.py
echo 'source /usr/share/gef/gef.py' > .gdbinit
gdb
gdb -q /bin/ls
man gdb
gdb -q Downloads/start
gdb -q Downloads/start
gdb -q Downloads/start
gdb -q Downloads/start
pacman -S xdg-desktop-portal
pacman -S xdg-desktop-portal-gtk
reboot
ls
cd Downloads
gdb -q start
ls
rm -rf gef-scripts .gdb_history .gdbinit .gdbinit.old .gef-2024.06.py .gef.rc .wget-hsts
rm -rf .config/scripts/gef-extras
ls
cd '~'
ls
cd
rm -rf '~'
la
ls
python
python -c '0x1234'
python -i '0x1234'
python -c 'print(0x1234)'
echo "python -c 'print(0x1234)'"
echo "python -c 'print(0x1234)'" >> .config/scripts/setup.sh
echo $(0x1234)
echo $((0x1234))
echo $((16#0x1234))
echo $((16#1234))
echo $((2#1234))
echo $((64#1234))
echo $((36#1234))
echo $((16#1234))
echo 'echo $((16#1234))' >> .config/scripts/setup.sh
$(128/8)
echo $(128/8)
echo $(128/8)
echo $((128/8))
echo $((0x21DD09EC))
iwctl
iwd
iwctl -- station wlan0 get-networks
iwctl -- station wlan0 get-networks | sort
iwctl -- station wlan0 get-networks
iwctl -- station wlan0 get-networks | awk '{print $1}'
iwctl -- station wlan0 get-networks | awk '{print $1}' | tail -3
man tail
iwctl -- station wlan0 get-networks | awk '{print $1}' | tail -n +3
iwctl -- station wlan0 get-networks | awk '{print $1}' | tail -n +0
iwctl -- station wlan0 get-networks | awk '{print $1}' | tail -n +1
iwctl -- station wlan0 get-networks | awk '{print $1}' | tail -n +2
iwctl -- station wlan0 get-networks | awk '{print $1}' | tail -n +3
iwctl -- station wlan0 get-networks | awk '{print $1}' | tail -n +4
iwctl -- station wlan0 get-networks | awk '{print $1}' | tail -n +5
iwctl -- station wlan0 get-networks | awk '{print $1}' | tail -n +6
iwctl -- station wlan0 get-networks | awk '{print $1}' | tail -n +6 | dmenu
iwctl -- station wlan0 get-networks
iwctl -- station wlan0 get-networks | tail -n +6 | dmenu
iwctl -- station wlan0 get-networks | tail -n +6
iwctl -- station wlan0 get-networks | tail -n +6 | dmenu
iwctl -- station wlan0 get-networks | tail -n +5 | dmenu
iwctl -- station wlan0 get-networks | tail -n +5
iwctl -- station wlan0 get-networks | tail -n +4
iwctl -- station wlan0 get-networks | tail -n +5
iwctl -- station wlan0 get-networks | tail -n +5
iwctl
iwctl -- station wlan0 get-networks | tail -n +5 | cut -c1-32
iwctl -- station wlan0 get-networks | tail -n +5 | cut -c1-32
iwctl -- station wlan0 get-networks | tail -n +5 | cut -c1-16
iwctl -- station wlan0 get-networks | tail -n +5 | cut -c1-32
iwctl -- station wlan0 get-networks | tail -n +4 | cut -c1-32
iwctl -- station wlan0 get-networks | tail -n +5 | cut -32
iwctl -- station wlan0 get-networks | tail -n +5 | cut -c-32
iwctl -- station wlan0 get-networks | tail -n +5 | cut -c1-32
iwctl -- station wlan0 get-networks | tail -n +5 
iwctl -- station wlan0 get-networks | tail -n +5 | cut -c1-35
iwctl -- station wlan0 get-networks | tail -n +5 | cut -c1-36
iwctl -- station wlan0 get-networks | tail -n +5 | cut -c1-36 | dmenu | xargs iwctl -- station wlan0 connect
iwctl -- station wlan0 get-networks | tail -n +5 | cut -c1-36 | dmenu | xargs iwctl -- station wlan0 connect
echo 'iwctl -- station wlan0 get-networks | tail -n +5 | cut -c1-36 | dmenu | xargs iwctl -- station wlan0 connect' >> .config/scripts/setup.sh
ssh
ssh fd@pwnable.kr -p2222
ssh fd@pwnable.kr -p2222
ssh col@pwnable.kr -p2222
ssh col@pwnable.kr -p2222
ssh col@pwnable.kr -p2222
ssh col@pwnable.kr -p2222
echo $((0x21DD09EC))
echo $((0x21DD09EC / 4))
echo $((0x21DD09EC))
568134125/4
$((568134125/4))
echo $((568134125/4))
python
echo $((568134125/3))
echo $((568134125/123))
echo $((568134125/3))
python
sudo systemctl stop pulseaudio.socket
sudo systemctl stop pulseaudio.service
pavucontrol
sudo systemctl --user status pipewire
inxi
sudo systemctl --user daemon-reload
sudo systemctl stop pipewire
sudo systemctl start pipewire
pipewire
pacman -Ss pipewire
wireplumber
fdisk -l
sudo fdisk -l
lsblk
df
df -h
man df
df -h
df -h | grep /dev
df -h | grep /dev/
df -h | grep "$/Dev"
df -h | grep "^/Dev"
df -h | grep "^\/Dev"
df -h | grep "^\/Dev"
df -h | grep -e "^\/Dev"
man grep
df -h | grep -P "^\/Dev"
df -h | grep -P "^/Dev"
df -h | grep -P "/Dev"
df -h | grep -P "Dev"
df -h | grep -e "Dev"
df -h | grep dev
df -h | grep /Dev
df -h | grep "/Dev"
df -h | grep "/dev"
df -h | grep -P "^/dev"
df -h | grep "^/dev"
df -h | grep "^ /dev"
df -h | grep "^/dev"
echo "Bash func that takes regex, removes spaces other than escaped ones" >> .config/scripts/setup.sh
nvim .config/scripts/setup.sh
nvim .config/scripts/setup.sh
bluetoothctl -- devices | dmenu | awk '{print $2}'\

nvim .config/scripts/setup.sh
iwctl -- station wlan0 get-networks
iwctl -- station wlan0 get-networks | tail -n +5
iwctl -- station wlan0 scan | tail -n +5
iwctl -- station wlan0 get-networks | tail -n +5
iwctl -- station wlan0 get-networks | tail -n +5 | sed "s/^.*?T/asd/g"
iwctl -- station wlan0 get-networks | tail -n +5 | grep "^.*?T"
iwctl -- station wlan0 get-networks | tail -n +5 | grep "^.*?"
iwctl -- station wlan0 get-networks | tail -n +5 | grep "^.*"
iwctl -- station wlan0 get-networks | tail -n +5 | cut 4
iwctl -- station wlan0 get-networks | tail -n +5 | cut -c 4
iwctl -- station wlan0 get-networks | tail -n +5 | cut -c 1
iwctl -- station wlan0 get-networks | tail -n +5 | cut -c1
iwctl -- station wlan0 get-networks | tail -n +5 | cut -c1-30
iwctl -- station wlan0 get-networks | tail -n +5 | cut -c4-30
iwctl -- station wlan0 get-networks | tail -n +5 | cut -c4
iwctl -- station wlan0 get-networks | tail -n +5 | cut -c4-99
iwctl -- station wlan0 get-networks | tail -n +5
iwctl -- station wlan0 get-networks | tail -n +5
iwctl -- station wlan0 get-networks | tail -n +5 | grep -o "T"
iwctl -- station wlan0 get-networks | tail -n +5 | grep -o "[AZaz]"
iwctl -- station wlan0 get-networks | tail -n +5 | grep -o "[A-Za-z]"
iwctl -- station wlan0 get-networks | tail -n +5 | grep -o "[A-Za-z].*"
iwctl -- station wlan0 get-networks | tail -n +5 
iwctl -- station wlan0 get-networks | tail -n +6 
iwctl -- station wlan0 get-networks | tail -n +5
iwctl -- station wlan0 get-networks | tail -n +5 | grep -o "[A-Za-z].*"
iwctl -- station wlan0 get-networks | tail -n +5 | grep -o "[A-Za-z].*?"
iwctl -- station wlan0 get-networks | tail -n +5 | grep -o "[A-Za-z].*?el"
iwctl -- station wlan0 get-networks | tail -n +5 | grep -oP "[A-Za-z].*?"
iwctl -- station wlan0 get-networks | tail -n +5 | grep -oP "[A-Za-z].*?P"
iwctl -- station wlan0 get-networks | tail -n +5 | grep -oP "[A-Za-z].*"
iwctl -- station wlan0 get-networks | tail -n +5 | grep -oP "[A-Za-z].*psk"
iwctl -- station wlan0 get-networks | tail -n +5 | grep -oP "[A-Za-z>].*psk"
iwctl -- station wlan0 get-networks | tail -n +5 | grep -oP "[A-Za-z].* "
iwctl -- station wlan0 get-networks | tail -n +5 | grep -oP "[A-Za-z].*   "
iwctl -- station wlan0 get-networks | tail -n +5 | grep -oP "[A-Za-z].*    "
iwctl -- station wlan0 get-networks | tail -n +5 | grep -oP "[A-Za-z].*'t"
iwctl -- station wlan0 get-networks | tail -n +5 | grep -oP "[A-Za-z].*\t"
iwctl -- station wlan0 get-networks | tail -n +5 | grep -oP "[A-Za-z].*"
iwctl -- station wlan0 get-networks | tail -n +5 | grep -oP "[A-Za-z].*? "
iwctl -- station wlan0 get-networks | tail -n +5 | grep -oP "[A-Za-z].*?"
iwctl -- station wlan0 get-networks | tail -n +5 | grep -oP "[A-Za-z].*"
iwctl -- station wlan0 get-networks | tail -n +5 | cut -c1-3 | grep -oP "[A-Za-z].*"
iwctl -- station wlan0 get-networks | tail -n +5 | cut -c2-99 | grep -oP "[A-Za-z].*"
iwctl -- station wlan0 get-networks | tail -n +5 | cut -c4-99 | grep -oP "[A-Za-z].*"
iwctl -- station wlan0 get-networks | tail -n +5 | cut -c5-99 | grep -oP "[A-Za-z].*"
iwctl -- station wlan0 get-networks | tail -n +5 | cut -c6-99 | grep -oP "[A-Za-z].*"
iwctl -- station wlan0 get-networks | tail -n +5 | cut -c8-99 | grep -oP "[A-Za-z].*"
iwctl -- station wlan0 get-networks | tail -n +5 | grep -oP "[A-Za-z].*"
iwctl -- station wlan0 get-networks | tail -n +5 | sort
iwctl
man iwdctl
iwdctl -h
man iwctl
iwctl device wlan0 get-networks
iwctl station wlan0 get-networks
iwctl station wlan0 scan
iwctl station wlan0 get-networks
exit
